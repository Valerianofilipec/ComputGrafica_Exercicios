<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
<title>Untitled Page</title>
<style>
    body {
        margin: 0; overflow: hidden;
    }
</style>
<script src="three.js"></script>
<script language="javascript" type="text/javascript">
<!--
    var renderer;
    var scene;
    var camera;
    
    function render() {
        renderer.render(scene, camera);
        requestAnimationFrame(render);
    }
    
    function handleResize() {
        camera.aspect = window.innerWidth / window.innerHeight;
        camera.updateProjectionMatrix();
        renderer.setSize(window.innerWidth, window.innerHeight);
    }    
    
    function iniciar() {
        scene = new THREE.Scene();
        renderer = new THREE.WebGLRenderer();
        renderer.setClearColor(0x000000, 1.0);
        renderer.setSize(window.innerWidth, window.innerHeight);
        renderer.shadowMapEnabled = true;
                
        //Criar cubos
                
        var cuboGeometriaA = new THREE.BoxGeometry(6, 4, 6);
        var cuboMaterialA = new THREE.MeshLambertMaterial({color: "#FF0000"});
        var cuboA = new THREE.Mesh(cuboGeometriaA, cuboMaterialA);        
        cuboA.castShadow = true;        
        cuboA.position.x = 0;
        cuboA.position.y = 0;
        cuboA.position.z = 0;
        cuboA.receiveShadow = true;
        scene.add(cuboA);
        
        var cuboGeometriaB = new THREE.BoxGeometry(6, 4, 6);
        var cuboMaterialB = new THREE.MeshLambertMaterial({color: "#00FF00"});
        var cuboB = new THREE.Mesh(cuboGeometriaB, cuboMaterialB);
        cuboB.castShadow = true;        
        cuboB.position.x = 8;
        cuboB.position.y = 0;
        cuboB.position.z = 0;
        cuboB.receiveShadow = true;
        scene.add(cuboB);

        var cuboGeometriaC = new THREE.BoxGeometry(6, 4, 6);
        var cuboMaterialC = new THREE.MeshLambertMaterial({color: "#0000FF"});
        var cuboC = new THREE.Mesh(cuboGeometriaC, cuboMaterialC);
        cuboC.castShadow = true;        
        cuboC.position.x = 0;
        cuboC.position.y = 0;
        cuboC.position.z = 8;
        cuboC.receiveShadow = true;
        scene.add(cuboC);

        var cuboGeometriaD = new THREE.BoxGeometry(6, 4, 6);
        var cuboMaterialD = new THREE.MeshLambertMaterial({color: "#FFFFFF"});
        var cuboD = new THREE.Mesh(cuboGeometriaD, cuboMaterialD);
        cuboD.castShadow = true;        
        cuboD.position.x = 8;
        cuboD.position.y = 0;
        cuboD.position.z = 8;
        cuboD.receiveShadow = true;
        scene.add(cuboD);

        var cuboGeometriaE = new THREE.BoxGeometry(6, 4, 6);
        var cuboMaterialE = new THREE.MeshLambertMaterial({color: "#FFFF00", transparent:true, opacity:0.7});
        var cuboE = new THREE.Mesh(cuboGeometriaE, cuboMaterialE);
        cuboE.castShadow = true;        
        cuboE.position.x = 4;
        cuboE.position.y = 1.5;
        cuboE.position.z = 4;
        cuboE.receiveShadow = true;
        scene.add(cuboE);

        var cuboGeometriaF = new THREE.BoxGeometry(3, 2, 3);
        var cuboMaterialF = new THREE.MeshLambertMaterial({color: "#00FFFF", transparent:true, opacity:0.7});
        var cuboF = new THREE.Mesh(cuboGeometriaF, cuboMaterialF);
        cuboF.castShadow = true;
        cuboF.position.x = 4;
        cuboF.position.y = 4;
        cuboF.position.z = 4;
        cuboF.receiveShadow = true;
        scene.add(cuboF);

        var cuboGeometriaG = new THREE.BoxGeometry(1.5, 1, 1.5);
        var cuboMaterialG = new THREE.MeshLambertMaterial({color: "#FF00FF", transparent:true, opacity:0.7});
        var cuboG = new THREE.Mesh(cuboGeometriaG, cuboMaterialG);
        cuboG.castShadow = true;
        cuboG.position.x = 4;
        cuboG.position.y = 5.5;
        cuboG.position.z = 4;
        cuboG.receiveShadow = true;
        scene.add(cuboG);

                
        //Criar um plano
        var planeGeometry = new THREE.PlaneGeometry(30, 30);
        var planeMaterial = new THREE.MeshLambertMaterial({color: 0xcccccc});
        var plane = new THREE.Mesh(planeGeometry, planeMaterial);
        plane.receiveShadow = true;

        //Determinar a posição do plano        
        plane.rotation.x = -0.5 * Math.PI;
        plane.position.x = 0;
        plane.position.y = -2;
        plane.position.z = 0;
        
        //Adicionar o plano à cena
        scene.add(plane);
                
        camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);
        camera.position.x = 25;
        camera.position.y = 23;
        camera.position.z = 24;
        camera.lookAt(scene.position);

        //Adicionar fonte de luz à cena        
        var spotLight = new THREE.SpotLight(0xffffff);
        spotLight.position.set(10, 20, 20);
        spotLight.shadowCameraNear = 20;
        spotLight.shadowCameraFar = 50;
        spotLight.castShadow = true;
        
        //Adicionar fonte de luz à cena
        scene.add(spotLight);
                        
        document.body.appendChild(renderer.domElement);
        render();            
    }
    window.onload = iniciar;
    window.addEventListener('resize', handleResize, false);    
    
-->            
</script>
</head>
<body>

</body>
</html>
